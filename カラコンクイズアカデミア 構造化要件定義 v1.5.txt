
## 📋 カラコンクイズアカデミア 構造化要件定義 v1.5

確定仕様（追加）:
  - タイムアウト: 未回答として次へ（-10%）
  - フィードバック: 2秒表示→自動で次へ
  - 正解時: サムネ画像表示
  - 出題条件: データ完備の商品のみ
  - 重複ログイン: 最新セッション優先

### 🎯 プロジェクト概要

**プロジェクト名**: HL001 ホテラバ presents Quiz☆カラコンアカデミア  
**開発期間**: 2025年9月〜10月（10月新店舗オープンまでにMVP完成）  
**予算**: 30万円（時給3000円×100時間）  
**対象者**: カラコン初学者スタッフ（主に若年女性アルバイト）  

### ⚡ 開発方針

```yaml
優先順位:
  1. 最速でテストプレイ可能状態（10月まで）
  2. UI/デザインは二の次（動作優先）
  3. 最小機能で開始→段階的拡張
```

### ✅ 確定仕様一覧

| 項目 | 仕様 | 備考 |
|------|------|------|
| **認証** | スタッフ番号＋名前 | 暫定実装（後日改善） |
| **問題数** | 10問固定 | 本番・練習共通 |
| **制限時間** | 20秒/問 | デフォルト値 |
| **モード** | 本番（1日1回）／練習（無制限） | リセット1回可 |
| **画像表示** | 同一画像×2枚並列 | レンズ画像（X列=24番目） |
| **選択肢** | 4択 | ブランド名｜カラー名 |
| **ヒント1** | DIA/G.DIA/BC表示 | ボタンクリック |
| **ヒント2** | コメント表示 | ボタンクリック |
| **スコア計算** | 100% - (不正解×10%) - (ヒント×3%) | 最大100%、最小0% |

### 🔄 データフロー詳細

```mermaid
graph LR
    A[ログイン画面] --> B{認証}
    B -->|成功| C[ホーム画面]
    B -->|失敗| A
    C --> D[本番モード]
    C --> E[練習モード]
    D --> F[10問クイズ]
    E --> F
    F --> G[結果画面]
    G --> H[スコア記録]
    H --> C
```

### 📊 データ構造（確定）

#### マスターデータ（109販促データ）

```javascript
// masterタブ構造
{
  brandKana: "I列(9)",   // ブランド名カナ
  colorKana: "J列(10)",  // カラー名カナ
  dia: "P列(16)",        // DIA
  gDia: "Q列(17)",       // G.DIA
  bc: "R列(18)",         // BC
  imageUrl: "X列(24)",   // レンズ画像URL
  comment: "AL列(38)"    // コメント
}
```

#### カテゴリデータ

```javascript
// カラーカテゴリタブ構造
{
  brandKana: "B列(2)",     // ブランド名カナ
  colorKana: "C列(3)",     // カラー名カナ
  categories: "F列(6)"     // カテゴリ（カンマ区切り）
}
```

### 🎲 クイズ生成ロジック（確定）

```javascript
// 問題生成アルゴリズム
1. 正解選択
   - masterタブから必要データ完備の商品をランダム抽出
   
2. 誤答生成（3つ）
   - カラーカテゴリタブから以下条件で抽出：
     * F列のカテゴリが1つ以上一致
     * カラー名が大きく異なるものは除外
   
3. 同一商品判定
   - master: I列＋J列の組み合わせ
   - category: B列＋C列の組み合わせ
   - 両者が一致 = 同一商品
```

### 🗂️ スプレッドシート構成

| 用途 | シートID | タブ名 |
|------|----------|--------|
| **マスター** | 1EkTjV__k1vAl08PlbOUhYpbFEGC-F_LL_26o1-HT1AI | master, カラーカテゴリ |
| **ユーザー** | 1X0TyeI_1zER6xIceUDSbJX-GFbqvi2orAiSWHRXlC7M | users |
| **履歴** | 1ShWXLvY9RimRYfsAkwoRyM2Bfwj4a3zVmr5bQc33-o0 | quiz_history |
| **ランキング** | 1I2REcy2v5OpyzoY3k61kCzJ3SYKOBBCMxTLCeHWutT8 | rankings |

### 🎨 UI/UX仕様

#### デザインテーマ
- **メインカラー**: #FF6EC7（ホテラバピンク）
- **サブカラー**: #FF9472（グラデーション）
- **背景**: グラデーション（#fff2f7 → #fffafc）
- **フォント**: Noto Sans JP
- **アイコン**: 絵文字ベース（👁️ 🎯 🏆 📊）

#### 画面構成

```
1. ログイン画面
   - ロゴ「ホテラバ presents Quiz☆カラコンアカデミア」
   - 入力フォーム（スタッフ番号、名前）
   - ログインボタン

2. ホーム画面
   - ユーザー情報（Lv.5 / 850pt / 7日連続）
   - 4つのメニューボタン
     * デイリーチャレンジ（本番）
     * 練習モード
     * ランキング
     * マイ成績

3. クイズ画面
   - 問題番号（Question 1/10）
   - タイマー（20秒カウントダウン）
   - レンズ画像（2枚並列）
   - ヒントボタン×2
   - 4択選択肢
   - 回答ボタン

4. 結果画面
   - スコア表示（正答率％）
   - 平均回答時間
   - 間違えた問題リスト
   - ホームへ戻るボタン
```

### ⚠️ 未決定事項と提案

| 項目 | 提案 | 理由 |
|------|------|------|
| **タイムアウト処理** | 未回答として次へ進む | ゲーム進行が止まらない |
| **正解フィードバック** | 1秒表示→自動で次へ | テンポ良い進行 |
| **画像エラー時** | placeholder画像表示 | エラーで止まらない |
| **重複ログイン** | 最新セッション優先 | シンプルな実装 |

### 📁 ファイル構成（最新）

```
HL001-quiz-karacon-academia/
├── gas/
│   ├── Config.gs         # 設定（シートID、列定義）
│   ├── Contracts.gs      # API契約定義
│   ├── DataAccess.gs     # データアクセス層
│   ├── QuizLogic.gs      # クイズロジック
│   ├── AuthRank.gs       # 認証・ランキング
│   ├── HealthTools.gs    # デバッグツール
│   ├── index.html        # メインHTML
│   └── styles.css        # スタイルシート
├── docs/                  # 要件定義・ワイヤーフレーム
└── parts/                 # 画像素材
```

### 🚀 実装優先順位

#### Phase 1（〜9/20）最小動作版
```
✅ ログイン機能（仮実装）
✅ 10問クイズ基本動作
✅ タイマー機能
⬜ 正解判定ロジック修正
⬜ スコア計算・表示
```

#### Phase 2（〜9/25）データ連携
```
⬜ スプレッドシート接続
⬜ 実画像表示
⬜ ヒント機能実装
⬜ スコア記録
```

#### Phase 3（〜9/30）品質向上
```
⬜ エラーハンドリング
⬜ UI/UXブラッシュアップ
⬜ テスト・デバッグ
```

### 🔧 次の実装タスク

```javascript
// 1. Config.gs の列定義確認
const CFG = {
  COLS: {
    MASTER: {
      BRAND_KANA: 9,    // I列
      COLOR_KANA: 10,   // J列
      DIA: 16,          // P列
      G_DIA: 17,        // Q列
      BC: 18,           // R列
      IMAGE_URL: 24,    // X列
      COMMENT: 38       // AL列
    }
  }
}

// 2. 正解判定ロジックの実装
function gradeQuiz(answers) {
  // qid/oidのハッシュ化実装
  // 正解との照合
  // スコア計算
}

// 3. 画像URL取得
function getImageUrl(productKey) {
  // masterシートから画像URL取得
  // エラー時はplaceholder返却
}
```

### 📝 開発規約

1. **変更前に必ず確認**（要件にない機能を追加しない）
2. **エラーで止まらない設計**（フォールバック必須）
3. **段階的実装**（完璧を求めない、動くものを先に）
4. **ログを残す**（`Logger.log`で問題箇所特定）

---

